/*
    Warning - this file was autogenerated by genparse
    DO NOT EDIT - any changes will be lost
*/

#ifndef SINK_PARSE_H
#define SINK_PARSE_H

#include <message_.h>

#ifdef __XAP__
#include <source.h>
#endif

const uint8 *UartparseData(const uint8 *s, const uint8 *e, Task task);
void UarthandleUnrecognised(const uint8 *data, uint16 length, Task task);

#ifdef __XAP__
uint16 UartparseSource(Source rfcDataIncoming, Task task);
#endif

struct sequence
{
  const uint8 *data;
  uint16 length;
};

struct DiscoverNearDev
{
  uint16 start;
};
struct PairDev
{
  struct sequence addr;
};
struct SetScanMode
{
  struct sequence mode;
};
struct SetUartBaudrate
{
  struct sequence baudrate;
};
struct HfpConn
{
  struct sequence addr;
};
struct HfpDial
{
  struct sequence num;
};
struct HfpMute
{
  uint16 mute;
};
struct SetDevClass
{
  struct sequence cls;
};
struct HidConn
{
  struct sequence addr;
};
struct HidKeyboardReport
{
  struct sequence data;
};
struct HidMouseReport
{
  struct sequence data;
};
struct MapConn
{
  struct sequence addr;
};
struct SetLocalAddr
{
  struct sequence addr;
};
struct SetLocalDevName
{
  struct sequence DevName;
};
struct SppConn
{
  struct sequence addr;
};
struct SppSendData
{
  struct sequence data;
};
struct A2dpConn
{
  struct sequence addr;
};
struct GattConn
{
  struct sequence addr;
};
struct PbapConn
{
  struct sequence addr;
};
struct PbapSetType
{
  uint16 type;
};
void handleDiscoverNearDev(Task , const struct DiscoverNearDev *);
void handlePairDev(Task , const struct PairDev *);
void handleSetScanMode(Task , const struct SetScanMode *);
void handleGetPin(Task );
void handleGetVersion(Task );
void handleSetPin(Task );
void handleSetUartBaudrate(Task , const struct SetUartBaudrate *);
void handleGetUartBaudrate(Task );
void handleHfpConn(Task , const struct HfpConn *);
void handleHfpDial(Task , const struct HfpDial *);
void handleHfpMute(Task , const struct HfpMute *);
void handleSetDevClass(Task , const struct SetDevClass *);
void handleGetDevClass(Task );
void handleHfpDisc(Task );
void handleHfpGetStatus(Task );
void handleHidConn(Task , const struct HidConn *);
void handleHidKeyboardReport(Task , const struct HidKeyboardReport *);
void handleHidMouseReport(Task , const struct HidMouseReport *);
void handleMapConn(Task , const struct MapConn *);
void handleSetLocalAddr(Task , const struct SetLocalAddr *);
void handleSetLocalDevName(Task , const struct SetLocalDevName *);
void handleSppConn(Task , const struct SppConn *);
void handleSppSendData(Task , const struct SppSendData *);
void handleA2dpConn(Task , const struct A2dpConn *);
void handleGattConn(Task , const struct GattConn *);
void handleGetLocalAddr(Task );
void handleGetLocalDevName(Task );
void handleThreeWayReleaseAllHeld(Task );
void handleHidDisc(Task );
void handleHidGetStatus(Task );
void handleMapDisc(Task );
void handleMapGetMessage(Task );
void handleMapGetStatus(Task );
void handlePbapConn(Task , const struct PbapConn *);
void handlePbapGetPhoneBook(Task );
void handleSppDisc(Task );
void handleSppGetStatus(Task );
void handleA2dpDisc(Task );
void handleA2dpGetStatus(Task );
void handleGattDisc(Task );
void handleGattGetStatus(Task );
void handleGattSendData(Task );
void handleHfpAnswer(Task );
void handleHfpHangUp(Task );
void handleThreeWayAddHeldTo3Way(Task );
void handleThreeWayAcceptWaitingHoldActive(Task );
void handleThreeWayAcceptWaitingReleaseActive(Task );
void handlePbapDisc(Task );
void handlePbapGetStatus(Task );
void handlePbapSetType(Task , const struct PbapSetType *);
void handleAvrcpGetStatus(Task );
void handleAvrcpNext(Task );
void handleAvrcpPlay(Task );
void handleAvrcpPrev(Task );
void handleAvrcpStop(Task );
void handleEnterPair(Task );
void handleAvrcpPause(Task );
void handleAvrcpVolUp(Task );
void handleAvrcpVolDown(Task );

#endif
